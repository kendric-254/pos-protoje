{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\protojereact\\\\final-pos\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPasswordForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const handleChange = e => {\n    setEmail(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:4000/api/user/forgotPassword', {\n        email\n      });\n      if (response.status === 200) {\n        toast.success('Password reset link sent to your email', {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000\n        });\n      } else {\n        toast.error('Failed to send reset link', {\n          position: toast.POSITION.TOP_RIGHT,\n          autoClose: 3000\n        });\n      }\n    } catch (error) {\n      toast.error('Error sending reset link', {\n        position: toast.POSITION.TOP_RIGHT,\n        autoClose: 3000\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"flex flex-col bg-white p-10 rounded-lg shadow-md gap-5 w-96\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl text-center font-bold mb-4\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your Email\",\n        value: email,\n        onChange: handleChange,\n        className: \"input-field mb-4 px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-blue-500\",\n        required: true // Add required attribute for better validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mb-5\",\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPasswordForm, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = ForgotPasswordForm;\nexport default ForgotPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ForgotPasswordForm\");","map":{"version":3,"names":["React","useState","axios","ToastContainer","toast","jsxDEV","_jsxDEV","ForgotPasswordForm","_s","email","setEmail","handleChange","e","target","value","handleSubmit","preventDefault","response","post","status","success","position","POSITION","TOP_RIGHT","autoClose","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/protojereact/final-pos/src/components/ForgotPassword.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst ForgotPasswordForm = () => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/user/forgotPassword', { email });\r\n      if (response.status === 200) {\r\n        toast.success('Password reset link sent to your email', {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: 3000,\r\n        });\r\n      } else {\r\n        toast.error('Failed to send reset link', {\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          autoClose: 3000,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error sending reset link', {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        autoClose: 3000,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <form onSubmit={handleSubmit} className=\"flex flex-col bg-white p-10 rounded-lg shadow-md gap-5 w-96\"> {/* Adjust width for better layout */}\r\n        <h1 className=\"text-2xl text-center font-bold mb-4\">Forgot Password</h1>\r\n        <label className=\"block\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter your Email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          className=\"input-field mb-4 px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:border-blue-500\"\r\n          required // Add required attribute for better validation\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mb-5\"\r\n        >\r\n          Send Reset Link\r\n        </button>\r\n        <ToastContainer />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}