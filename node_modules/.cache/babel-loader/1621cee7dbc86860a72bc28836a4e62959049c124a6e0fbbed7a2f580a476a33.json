{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\protojereact\\\\final-pos\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userRole, setUserRole] = useState(null); // Initialize userRole state\n\n  const login = role => {\n    setIsLoggedIn(true);\n    setUserRole(role);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setUserRole(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout,\n      userRole\n    },\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5QcjI3+TYbS/xqftlWwlocVCQEA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const authContext = useContext(AuthContext);\n  if (!authContext) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return authContext;\n};\n_s2(useAuth, \"g0q6N3HTsGa67OokMUhTOzE2a0M=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","userRole","setUserRole","login","role","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","authContext","Error","$RefreshReg$"],"sources":["C:/xampp/htdocs/protojereact/final-pos/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userRole, setUserRole] = useState(null); // Initialize userRole state\r\n\r\n  const login = (role) => { \r\n    setIsLoggedIn(true);\r\n    setUserRole(role);\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    setUserRole(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, login, logout, userRole }}> {/* Provide userRole in context */}\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  if (!authContext) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n\r\n  return authContext;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD,MAAMY,KAAK,GAAIC,IAAI,IAAK;IACtBJ,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAACE,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBL,aAAa,CAAC,KAAK,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAER,UAAU;MAAEI,KAAK;MAAEE,MAAM;MAAEJ;IAAS,CAAE;IAAAJ,QAAA,GAAC,GAAC,EACpEA,QAAQ;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACb,EAAA,CAnBWF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAqBzB,OAAO,MAAMiB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,WAAW,GAAGvB,UAAU,CAACG,WAAW,CAAC;EAE3C,IAAI,CAACoB,WAAW,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EAEA,OAAOD,WAAW;AACpB,CAAC;AAACD,GAAA,CARWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}